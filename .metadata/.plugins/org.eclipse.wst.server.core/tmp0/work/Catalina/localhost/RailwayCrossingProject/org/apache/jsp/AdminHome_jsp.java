/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.105
 * Generated at: 2025-06-06 12:20:11 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.railway.dao.RailwayCrossingDao;
import com.railway.bean.RailwayCrossingBean;
import java.util.ArrayList;

public final class AdminHome_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(4);
    _jspx_imports_classes.add("com.railway.dao.RailwayCrossingDao");
    _jspx_imports_classes.add("com.railway.bean.RailwayCrossingBean");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("\r\n");
      out.write("	<head>\r\n");
      out.write("		<style>\r\n");
      out.write("			body {\r\n");
      out.write("  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\r\n");
      out.write("  background: linear-gradient(135deg, #fff8e1, #fff3e0);\r\n");
      out.write("  margin: 40px 20px;\r\n");
      out.write("  color: #5d4037; /* deep brown text */\r\n");
      out.write("  -webkit-font-smoothing: antialiased;\r\n");
      out.write("  -moz-osx-font-smoothing: grayscale;\r\n");
      out.write("}\r\n");
      out.write(" \r\n");
      out.write("h1 {\r\n");
      out.write("  text-align: center;\r\n");
      out.write("  color: #3e2723; /* dark coffee brown */\r\n");
      out.write("  margin-bottom: 50px;\r\n");
      out.write("  font-weight: 900;\r\n");
      out.write("  font-size: 3rem;\r\n");
      out.write("  letter-spacing: 3px;\r\n");
      out.write("  text-transform: uppercase;\r\n");
      out.write("  text-shadow: 1px 1px 4px #b28860; /* subtle warm shadow */\r\n");
      out.write("  user-select: none;\r\n");
      out.write("}\r\n");
      out.write(" \r\n");
      out.write("/* ===== Table Container ===== */\r\n");
      out.write("table {\r\n");
      out.write("  width: 100%;\r\n");
      out.write("  max-width: 1400px;\r\n");
      out.write("  margin: 0 auto 60px auto;\r\n");
      out.write("  border-collapse: separate;\r\n");
      out.write("  border-spacing: 0;\r\n");
      out.write("  background: rgba(255, 248, 220, 0.85); /* creamy warm */\r\n");
      out.write("  box-shadow:\r\n");
      out.write("    0 8px 16px rgba(109, 76, 65, 0.15), /* softer brown shadow */\r\n");
      out.write("    0 4px 8px rgba(0,0,0,0.05);\r\n");
      out.write("  border-radius: 12px;\r\n");
      out.write("  overflow: hidden;\r\n");
      out.write("  word-wrap: break-word;\r\n");
      out.write("  table-layout: fixed;\r\n");
      out.write("  cursor: default;\r\n");
      out.write("}\r\n");
      out.write(" \r\n");
      out.write("th, td {\r\n");
      out.write("  padding: 16px 20px;\r\n");
      out.write("  text-align: left;\r\n");
      out.write("  font-size: 1rem;\r\n");
      out.write("  transition: color 0.3s ease;\r\n");
      out.write("  border-bottom: 1px solid #d7ccc8; /* soft border */\r\n");
      out.write("  word-wrap: break-word;\r\n");
      out.write("  color: #5d4037;\r\n");
      out.write("}\r\n");
      out.write(" \r\n");
      out.write("th {\r\n");
      out.write("  background: #6d4c41; /* warm coffee brown */\r\n");
      out.write("  color: #fff8e1; /* cream text */\r\n");
      out.write("  font-weight: 700;\r\n");
      out.write("  text-transform: uppercase;\r\n");
      out.write("  letter-spacing: 0.15em;\r\n");
      out.write("  user-select: none;\r\n");
      out.write("  box-shadow: inset 0 -3px 6px rgba(109, 76, 65, 0.4);\r\n");
      out.write("  position: sticky;\r\n");
      out.write("  top: 0;\r\n");
      out.write("  z-index: 2;\r\n");
      out.write("}\r\n");
      out.write(" \r\n");
      out.write("/* Soft pastel row colors */\r\n");
      out.write("tbody tr:nth-child(odd) {\r\n");
      out.write("  background-color: #fff8e1; /* light cream */\r\n");
      out.write("}\r\n");
      out.write(" \r\n");
      out.write("tbody tr:nth-child(even) {\r\n");
      out.write("  background-color: #f5f1ea; /* very light warm beige */\r\n");
      out.write("}\r\n");
      out.write(" \r\n");
      out.write("/* Hover effect with warm soft tone */\r\n");
      out.write("tbody tr:hover {\r\n");
      out.write("  background-color: #d7ccc8; /* soft taupe */\r\n");
      out.write("  color: #3e2723;\r\n");
      out.write("  font-weight: 600;\r\n");
      out.write("  transition: background-color 0.4s ease;\r\n");
      out.write("}\r\n");
      out.write(" \r\n");
      out.write("/* Action column */\r\n");
      out.write("#act {\r\n");
      out.write("  width: 180px;\r\n");
      out.write("  text-align: center;\r\n");
      out.write("}\r\n");
      out.write(" \r\n");
      out.write("/* Forms inside action cell inline */\r\n");
      out.write("#status form {\r\n");
      out.write("  display: inline-block;\r\n");
      out.write("  margin: 0 8px;\r\n");
      out.write("}\r\n");
      out.write(" \r\n");
      out.write("/* Buttons */\r\n");
      out.write("button {\r\n");
      out.write("  background-color: #a1887f; /* warm taupe */\r\n");
      out.write("  border: none;\r\n");
      out.write("  color: #fff8e1; /* cream text */\r\n");
      out.write("  padding: 10px 22px;\r\n");
      out.write("  text-transform: uppercase;\r\n");
      out.write("  font-size: 0.9rem;\r\n");
      out.write("  font-weight: 600;\r\n");
      out.write("  border-radius: 25px;\r\n");
      out.write("  cursor: pointer;\r\n");
      out.write("  transition: background-color 0.35s ease, box-shadow 0.35s ease, transform 0.25s ease;\r\n");
      out.write("  box-shadow: 0 4px 6px rgba(161, 136, 127, 0.4);\r\n");
      out.write("  user-select: none;\r\n");
      out.write("  outline-offset: 3px;\r\n");
      out.write("  outline-color: transparent;\r\n");
      out.write("  outline-style: solid;\r\n");
      out.write("  overflow: visible;\r\n");
      out.write("  font-family: 'Georgia', serif;\r\n");
      out.write("}\r\n");
      out.write(" \r\n");
      out.write("button:hover,\r\n");
      out.write("button:focus {\r\n");
      out.write("  background-color: #6d4c41; /* darker coffee brown */\r\n");
      out.write("  box-shadow: 0 6px 12px rgba(109, 76, 65, 0.7);\r\n");
      out.write("  transform: translateY(-2px);\r\n");
      out.write("  outline-color: #b39ddb;\r\n");
      out.write("}\r\n");
      out.write(" \r\n");
      out.write("button:active {\r\n");
      out.write("  transform: translateY(0);\r\n");
      out.write("  box-shadow: 0 2px 5px rgba(109, 76, 65, 0.5);\r\n");
      out.write("}\r\n");
      out.write(" \r\n");
      out.write("/* Responsive: wrap cells instead of scroll */\r\n");
      out.write("@media (max-width: 768px) {\r\n");
      out.write("  table {\r\n");
      out.write("    width: 100%;\r\n");
      out.write("    table-layout: auto;\r\n");
      out.write("  }\r\n");
      out.write(" \r\n");
      out.write("  th, td {\r\n");
      out.write("    padding: 12px 16px;\r\n");
      out.write("    font-size: 0.9rem;\r\n");
      out.write("    white-space: normal;\r\n");
      out.write("  }\r\n");
      out.write(" \r\n");
      out.write("  #act {\r\n");
      out.write("    width: auto;\r\n");
      out.write("  }\r\n");
      out.write(" \r\n");
      out.write("  button {\r\n");
      out.write("    padding: 8px 16px;\r\n");
      out.write("    font-size: 0.85rem;\r\n");
      out.write("  }\r\n");
      out.write("}\r\n");
      out.write("		</style>\r\n");
      out.write("	</head>\r\n");
      out.write("	\r\n");
      out.write("	<body>\r\n");
      out.write("	\r\n");
      out.write("		<h1>Admin Home Page</h1>\r\n");
      out.write("		");

		int i=1;
		ArrayList<RailwayCrossingBean> all=RailwayCrossingDao.selectAll();
      out.write("\r\n");
      out.write("		");

		for(RailwayCrossingBean rcb:all){
			
      out.write("\r\n");
      out.write("			<form action=\"AddForm.jsp\">\r\n");
      out.write("						");
session.setAttribute("add",rcb); 
      out.write("\r\n");
      out.write("						<button type=\"submit\">Add</button>		\r\n");
      out.write("			</form>	\r\n");
      out.write("		");
i++;}
      out.write("\r\n");
      out.write("		\r\n");
      out.write("		\r\n");
      out.write("		<table border=\"4\">\r\n");
      out.write("		<tr><th>Sr.No</th><th>Name</th><th>Address</th><th>Landmark</th><th>Train Schedule</th><th>Person In-charge</th><th>Status</th><th id=\"act\">Action</th></tr>\r\n");
      out.write("		");

		for(RailwayCrossingBean rcb:all){
			
      out.write("\r\n");
      out.write("			<tr>\r\n");
      out.write("			<td>");
      out.print(i );
      out.write("</td><td>");
      out.print(rcb.getName() );
      out.write("</td><td>");
      out.print(rcb.getAddress() );
      out.write("</td><td>");
      out.print(rcb.getLandmark() );
      out.write("</td><td>");
      out.print(rcb.getTrainschedules() );
      out.write("</td><td>");
      out.print(rcb.getPersonincharges() );
      out.write("</td><td>");
      out.print(rcb.getStatus() );
      out.write("</td>\r\n");
      out.write("			<td id=\"status\">		\r\n");
      out.write("\r\n");
      out.write("			<form action=\"UpdateForm.jsp\">\r\n");
      out.write("						");
session.setAttribute("update",rcb); 
      out.write("\r\n");
      out.write("						<button type=\"submit\">Update</button>		\r\n");
      out.write("			</form>		\r\n");
      out.write("			<form action=\"DeleteCrossingForm.jsp\">		\r\n");
      out.write("			");
session.setAttribute("aaa",rcb.getName()); 
      out.write("		\r\n");
      out.write("			<button type=\"submit\">Delete</button>		\r\n");
      out.write("			</form>						\r\n");
      out.write("			</td>		\r\n");
      out.write("		");
i++;}
      out.write("		\r\n");
      out.write("		</tr>						\r\n");
      out.write("		</table>\r\n");
      out.write("		\r\n");
      out.write("	</body>\r\n");
      out.write("\r\n");
      out.write("</html>\r\n");
      out.write("\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
